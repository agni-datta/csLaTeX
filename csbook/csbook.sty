%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% csbook Package
%% Version: 1.0
%% Date: 2024/05/19
%% Description: This package provides a comprehensive set of tools and environments for creating academic books and documents in computer science.
%% Author: Agni Datta
%% Email: agnidatta.org@gmail.com
%% Maintainer: Agni Datta
%% License: MIT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% The csbook package offers a suite of features tailored for crafting academic books and documents within the domain of computer science.
% It aims to streamline the creation process while maintaining a professional and visually appealing output.

% Usage:
% 1. Load the package in the preamble using \RequirePackage{csbook}.
% 2. After loading, utilize the provided environments and tools to structure and format your document efficiently.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Enable the use of '@' in command names
\makeatletter

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Package Declaration
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Declare that this is a LaTeX2e package
\providecommand{\filename}{csbook} % Package filename
\providecommand{\fileversion}{v1} % Package version
\providecommand{\filedate}{2024/04/17} % Package release date
\providecommand{\fileauthor}{Agni Datta} % Package author
\providecommand{\csbook@version}{1.0} % Internal version number

\NeedsTeXFormat{LaTeX2e} % Specifies that this package requires LaTeX2e
\AtEndOfPackage{%
	\ProvidesPackage{\filename}[\filedate\space\fileversion\space(\fileauthor)]%
	\typeout{Package `\filename', \fileversion, <\filedate>} % Output package information
}
\ProvidesPackage{\filename}[\csbook@version\space A LaTeX package for typesetting computer science books]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Programming Tools
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage{ifxetex} % Detects XeTeX compilation
\RequirePackage{ifluatex} % Detects LuaLaTeX compilation
\RequirePackage{calc} % Enables various LaTeX calculations
\RequirePackage{etoolbox} % Offers advanced conditional programming features
\RequirePackage{xpatch} % Enhances etoolbox with flexible command patching capabilities

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Macro Definition Tools
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage{xparse} % Facilitates the definition of complex macros
\RequirePackage{xkeyval} % Enables advanced key-value argument processing
\RequirePackage{kvoptions} % Manages key-value options in package and class files

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Class Option Definitions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Boolean Flags
\newbool{forprint}          % Flag to manage the use of print-specific settings
\newbool{useinconsolata}    % Flag to manage the use of Inconsolata font
\newbool{usebiblatex}       % Flag to manage the use of BibLaTeX
\newbool{usecodelists}      % Flag to manage the use of code lists
\newbool{useebgaramond}     % Flag to manage the use of EB Garamond font
\newbool{usefancythm}       % Flag to manage the use of fancy theorem formatting
\newbool{usefiramono}       % Flag to manage the use of Fira Mono font
\newbool{usefirasans}       % Flag to manage the use of Fira Sans font
\newbool{usekepler}         % Flag to manage the use of KP font
\newbool{uselibsans}        % Flag to manage the use of Libertinus Sans font
\newbool{uselmodern}        % Flag to manage the use of Latin Modern font
\newbool{usenormalthm}      % Flag to manage the use of standard theorem formatting
\newbool{useoldlmodern}     % Flag to manage the use of Old Latin Modern font
\newbool{usesourcecode}     % Flag to manage the use of Source Code Pro font
\newbool{usesourcesans}     % Flag to manage the use of Source Sans font
\newbool{usesrtbiblatex}    % Flag to manage the use of sorted BibLaTeX
\newbool{usetikz}           % Flag to manage the use of TikZ

% Boolean Initialization
\setbool{forprint}{false}          % Default: Printing-specific options off
\setbool{useinconsolata}{false}    % Default: Inconsolata font off
\setbool{usebiblatex}{false}       % Default: BibLaTeX off
\setbool{usecodelists}{false}      % Default: Code lists off
\setbool{useebgaramond}{false}     % Default: EB Garamond font off
\setbool{usefancythm}{false}       % Default: Fancy theorem formatting off
\setbool{usefiramono}{false}       % Default: Fira Mono font off
\setbool{usefirasans}{false}       % Default: Fira Sans font off
\setbool{usekepler}{false}         % Default: KP font off
\setbool{uselibsans}{false}        % Default: Libertinus Sans font off
\setbool{uselmodern}{false}        % Default: Latin Modern font off
\setbool{usenormalthm}{false}      % Default: Standard theorem formatting off
\setbool{useoldlmodern}{false}     % Default: Old Latin Modern font off
\setbool{usesourcecode}{false}     % Default: Source Code Pro font off
\setbool{usesourcesans}{false}     % Default: Source Sans font off
\setbool{usesrtbiblatex}{false}    % Default: Sorted BibLaTeX off
\setbool{usetikz}{false}           % Default: TikZ off

% Option Definitions
\DeclareOption{forprint}{\setbool{forprint}{true}}                 % Enable print-specific settings if specified
\DeclareOption{useinconsolata}{\setbool{useinconsolata}{true}}     % Enable Inconsolata font if specified
\DeclareOption{usebiblatex}{\setbool{usebiblatex}{true}}           % Enable BibLaTeX if specified
\DeclareOption{usecodelists}{\setbool{usecodelists}{true}}         % Enable code lists if specified
\DeclareOption{useebgaramond}{\setbool{useebgaramond}{true}}       % Enable EB Garamond font if specified
\DeclareOption{usefancythm}{\setbool{usefancythm}{true}}           % Enable fancy theorem formatting if specified
\DeclareOption{usefiramono}{\setbool{usefiramono}{true}}           % Enable Fira Mono font if specified
\DeclareOption{usefirasans}{\setbool{usefirasans}{true}}           % Enable Fira Sans font if specified
\DeclareOption{usekepler}{\setbool{usekepler}{true}}               % Enable KP font if specified
\DeclareOption{uselibsans}{\setbool{uselibsans}{true}}             % Enable Libertinus Sans font if specified
\DeclareOption{uselmodern}{\setbool{uselmodern}{true}}             % Enable Latin Modern font if specified
\DeclareOption{usenormalthm}{\setbool{usenormalthm}{true}}         % Enable standard theorem formatting if specified
\DeclareOption{useoldlmodern}{\setbool{useoldlmodern}{true}}       % Enable Old Latin Modern font if specified
\DeclareOption{usesourcecode}{\setbool{usesourcecode}{true}}       % Enable Source Code Pro font if specified
\DeclareOption{usesourcesans}{\setbool{usesourcesans}{true}}       % Enable Source Sans font if specified
\DeclareOption{usesrtbiblatex}{\setbool{usesrtbiblatex}{true}}     % Enable sorted BibLaTeX if specified
\DeclareOption{usetikz}{\setbool{usetikz}{true}}                   % Enable TikZ if specified

% Handle Unrecognised Options
\DeclareOption*{\PackageWarning{csbook}{Unrecognised option '\CurrentOption'}}  % Warn for any unknown options

% Process the Options
\ProcessOptions\relax  % Implement the specified options and continue

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% PDF Management and External File Handling
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage[2.0, objcompress, compress]{bxpdfver} % Manage PDF version and compression settings
\RequirePackage{comment} % Customize list environments with conditional comments
\RequirePackage{pdfpages} % Include external PDF pages in the document
\RequirePackage{pdflscape} % Enable landscape pages in PDFs
\RequirePackage{ragged2e} % Provides enhanced justification options compared to standard LaTeX commands

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Package for Support for color
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage[x11names, dvipsnames, svgnames]{xcolor} % Provides color support with extended color schemes

% Declare and initialize the variable \accentcolor
\providecommand{\declvar}[2]{\def#1{#2}} % Command to declare variables
\declvar{\accentcolor}{RoyalBlue4} % Default accent color

% Define the \setaccentcolor command to update \accentcolor based on user input
\providecommand{\setaccentcolor}[1]{%
	\ifx\relax#1\relax % Check if the input is empty
		\declvar{\accentcolor}{RoyalBlue4} % Reset to default blue if no input
	\else
		\declvar{\accentcolor}{#1} % Set to user-specified color
	\fi
	\colorlet{accentcolor}{\accentcolor} % Update the color definition
}

% Example usage:
% \setaccentcolor{RoyalBlue4} % Sets accent color to RoyalBlue4
% \setaccentcolor{} % Resets to the default blue

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Language and Typographic Settings
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Load language support
\RequirePackage[english]{babel}  % Set language to English
\RequirePackage[autostyle=true, csdisplay=true]{csquotes} % Enhanced quotations

% Load microtype conditionally based on the engine
\RequirePackage[babel=true]{microtype} % For both XeTeX and LuaLaTeX
% Conditional options based on engine
\ifxetex\PassOptionsToPackage{protrusion=true}{microtype}\fi % Additional options for XeTeX
\ifluatex\PassOptionsToPackage{protrusion=true,expansion=true}{microtype}\fi % Additional options for LuaLaTeX

% Configure line spacing and text symbols
\RequirePackage[onehalfspacing]{setspace}  % One and a half line spacing
\RequirePackage[full]{textcomp}  % Extra text symbols
\RequirePackage[normalem]{ulem}  % Underlining and strikethrough

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Page Layout Configuration
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\providecommand{\forprint}{%
	% Geometry settings for an A4-sized textbook layout
	\RequirePackage[%
		a4paper,                % Paper size: A4
		left=1.5in,             % Left margin (wider for binding)
		right=1in,              % Right margin (standard)
		top=1in,                % Top margin
		bottom=1in,             % Bottom margin
		bindingoffset=0.5in,    % Binding offset: extra space for the inner margin
		headheight=15pt,        % Height of the header (room for chapter titles)
		headsep=20pt,           % Space between the header and text block
		footskip=25pt,          % Space for footers (e.g., page numbers)
		textheight=670pt,       % Height of the text block (for readability)
		textwidth=440pt,        % Width of the text block (balanced for readability)
		centering,              % Center the text block on the page
		includeheadfoot         % Include headers and footers in the layout
	]{geometry}                 % Load geometry package for page layout management
}

\ifbool{forprint}{\forprint}{%
	\RequirePackage[%
		a4paper,               % Define A4 paper size
		tmargin=2.50cm,        % Set top margin
		bmargin=2.50cm,        % Set bottom margin
		lmargin=3.50cm,        % Set left margin
		rmargin=3.50cm,        % Set right margin
		footskip=1.00cm        % Set distance from text to footer
	]{geometry}                % Load geometry package for page layout management
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Customization of Headers and Footers
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage{fancyhdr} % Load the fancyhdr package for custom headers and footers

% Clear all header and footer fields
\fancyhf{} % Remove existing header and footer content

% Configure header layout
\fancyhead[LE, RO]{\normalfont\small\sffamily\thepage} % Page number on the left side of even pages and right side of odd pages
\fancyhead[LO, RE]{\normalfont\small\sffamily\scshape\@title} % Title on right side of even pages and left side of odd pages

% Define the thickness of the header rule
\renewcommand{\headrulewidth}{0.25pt} % Set header rule thickness

% Apply the custom page style
\pagestyle{fancy} % Use the fancy page style

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Font and Mathematics Packages
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage[T1]{fontenc}            % Enable T1 font encoding for improved font output in PDF
\RequirePackage{amsfonts}               % Provides essential mathematical fonts (e.g., \mathbb)
\RequirePackage{amssymb}                % Supplies additional mathematical symbols (e.g., \mathfrak)
\RequirePackage{amsmath}                % Enables advanced mathematical formatting and environments
\RequirePackage{amsthm}                 % Facilitates the creation of theorem-like environments
\RequirePackage{thmtools}               % Enhances theorem-related functionalities, such as custom theorem styles
\RequirePackage{nicefrac}               % Improves the visual appearance of fractions with diagonal slashes
\RequirePackage{siunitx}                % Ensures consistent formatting of SI units (e.g., \SI, \unit)
\RequirePackage{fontspec}               % Allows the use of custom fonts with XeLaTeX and LuaLaTeX
\RequirePackage{unicode-math}           % Provides support for Unicode math fonts, enabling better math typography

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Font Setup Command Definitions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Command to set up Old Latin Modern fonts for both text and mathematics
\providecommand{\useoldlmodern}{%
	\setmainfont[%
		ItalicFont = lmroman10-italic.otf,            % Italic variant for emphasis
		SmallCapsFont = lmromancaps10-regular.otf,    % Small caps variant for stylistic elements
		SmallCapsFeatures = {RawFeature=+smcp},       % Enable small caps feature
		BoldFont = lmroman10-bold.otf,                % Bold variant for headings
		BoldItalicFont = lmroman10-bolditalic.otf,    % Bold italic for extra emphasis
		RawFeature = {+calt, +case, +hlig, +kern, +liga, +lnum, +mark, +mkmk, +pnum} % Advanced typographic features
	]{lmroman10-regular.otf} % Set the main text font
	\setmathfont[%
		RawFeature = {+calt, +case, +hlig, +kern, +liga, +lnum, +mark, +mkmk, +pnum} % Advanced typographic features
	]{latinmodern-math.otf} % Set the mathematics font
	\setsansfont[%
		ItalicFont = lmsans10-oblique.otf,            % Italic variant for emphasis
		SmallCapsFont = NewCMSans10-Book.otf,         % Small caps variant for stylistic elements
		SmallCapsFeatures = {RawFeature=+smcp},       % Enable small caps feature
		BoldFont = lmsans10-bold.otf,                 % Bold variant for headings
		BoldItalicFont = lmsans10-boldoblique.otf,    % Bold italic for extra emphasis
		RawFeature = {+calt, +case, +hlig, +kern, +liga, +lnum, +mark, +mkmk, +pnum} % Advanced typographic features
	]{lmsans10-regular.otf} % Set the sans-serif font
}

% Command to set up Latin Modern fonts for both text and mathematics
\providecommand{\uselmodern}{%
	\setmainfont[%
		ItalicFont = NewCM10-BookItalic.otf,          % Italic font specification
		SmallCapsFont = NewCM10-Book.otf,             % Small caps font specification
		SmallCapsFeatures = {RawFeature=+smcp},       % Enable small caps feature
		BoldFont = NewCM10-Bold.otf,                  % Bold font specification
		BoldItalicFont = NewCM10-BoldItalic.otf,      % Bold italic font specification
		RawFeature = {+calt, +case, +hlig, +kern, +liga, +lnum, +mark, +mkmk, +pnum} % Apply advanced typographic features
	]{NewCM10-Book.otf} % Set the main text font
	\setmathfont{NewCMMath-Book.otf} % Set the mathematics font
	\setsansfont[%
		ItalicFont = NewCMSans10-Oblique.otf,         % Italic variant for emphasis
		SmallCapsFont = NewCMSans10-Book.otf,         % Small caps variant for stylistic elements
		SmallCapsFeatures = {RawFeature=+smcp},       % Enable small caps feature
		BoldFont = NewCMSans10-Bold.otf,              % Bold variant for headings
		BoldItalicFont = NewCMSans10-BoldOblique.otf, % Bold italic for extra emphasis
		RawFeature = {+calt, +case, +hlig, +kern, +liga, +lnum, +mark, +mkmk, +pnum} % Advanced typographic features
	]{NewCMSans10-Book.otf} % Set the sans-serif font
}

% Command to configure EB Garamond fonts for text and math
\providecommand{\useebgaramond}{%
	\setmainfont[%
		RawFeature = {+calt, +case, +hlig, +kern, +liga, +lnum, +mark, +mkmk, +pnum}, % Apply advanced typographic features
		StylisticSet = {3,5} % Apply specific stylistic sets
	]{EB Garamond} % Set the main font
	\setmathfont[%
		RawFeature = {+calt, +case, +hlig, +kern, +liga, +lnum, +mark, +mkmk, +pnum}, % Apply advanced typographic features
		StylisticSet = {2,6,7,9} % Apply specific stylistic sets
	]{Garamond-Math.otf} % Set the math font
}

% Command to configure Kepler fonts
\providecommand{\usekepler}{%
	\RequirePackage{kpfonts-otf} % Load the Kepler font package
	\let\D\relax % Reset the definition of \D, if previously defined
}

% Command to configure Libertinus Sans font
\providecommand{\uselibsans}{%
	\setsansfont[%
		UprightFont = LibertinusSans-Regular, % Specify the upright font
		BoldFont = LibertinusSans-Bold.otf, % Specify the bold font
		ItalicFont = LibertinusSans-Italic.otf, % Specify the italic font
		SmallCapsFont = LibertinusSans-Regular, % Specify the small caps font
		SmallCapsFeatures = {RawFeature=+smcp}, % Enable small caps feature
		RawFeature = {+calt, +case, +dlig, +kern, +liga, +lnum, +mark, +mkmk, +pnum}, % Apply advanced typographic features
		StylisticSet = {1,3} % Apply specific stylistic sets
	]{LibertinusSans-Regular.otf} % Define the sans font
}

% Command to configure Source Sans Pro font
\providecommand{\usesourcesans}{%
	\RequirePackage[otf, lining, proportional, scale=0.975]{sourcesanspro} % Load the Source Sans Pro package with specified options
	\setsansfont[%
		Scale = 0.975, % Set font scale
		SmallCapsFeatures = {RawFeature=+smcp}, % Enable small caps feature
		RawFeature = {+calt, +case, +dlig, +kern, +liga, +lnum, +mark, +mkmk, +pnum} % Apply advanced typographic features
	]{Source Sans Pro} % Define the sans font
}

% Command to configure Source Code Pro font
\providecommand{\usesourcecode}{%
	\RequirePackage[otf, lining, scale=0.865]{sourcecodepro} % Load the Source Code Pro package with specified options
	\setmonofont[%
		Scale = 0.865, % Set font scale for monospaced font
		SmallCapsFeatures = {RawFeature=+smcp}, % Enable small caps feature
		RawFeature = {+calt, +case, +dlig, +kern, +liga, +lnum, +mark, +mkmk, +pnum} % Apply advanced typographic features
	]{Source Code Pro} % Define the monospaced font
}

% Command to configure Fira Sans font
\providecommand{\usefirasans}{%
	\setsansfont[%
		Scale = 0.95, % Set font scale
		BoldFont = {FiraSans-Bold.otf}, % Specify the bold font
		ItalicFont = {FiraSans-BookItalic.otf}, % Specify the italic font
		BoldItalicFont = {FiraSans-BoldItalic.otf}, % Specify the bold italic font
		SmallCapsFont = {FiraSans-Book.otf}, % Specify the small caps font
		SmallCapsFeatures = {RawFeature=+smcp}, % Enable small caps feature
		RawFeature = {+calt, +case, +dlig, +kern, +liga, +lnum, +mark, +mkmk, +pnum} % Apply advanced typographic features
	]{FiraSans-Book.otf} % Define the Fira Sans font
}

% Command to configure Fira Mono font
\providecommand{\usefiramono}{%
	\setmonofont[%
		Scale = 0.865, % Set font scale for monospaced font
		BoldFont = {FiraMono-Bold.otf}, % Specify the bold font
		ItalicFont = {FiraMono-Oblique.otf}, % Specify the italic font
		BoldItalicFont = {FiraMono-BoldOblique.otf}, % Specify the bold italic font
		SmallCapsFont = {FiraMono-Regular.otf}, % Specify the small caps font
		SmallCapsFeatures = {RawFeature=+smcp}, % Enable small caps feature
		RawFeature = {+calt, +case, +dlig, +kern, +liga, +lnum, +mark, +mkmk, +pnum} % Apply advanced typographic features
	]{FiraMono-Regular.otf} % Define the Fira Mono font
}

% Command to configure Inconsolata font
\providecommand{\useinconsolata}{%
	\setmonofont[%
		SmallCapsFeatures = {RawFeature=+smcp}, % Enable small caps feature
		RawFeature = {+calt, +case, +dlig, +kern, +liga, +lnum, +mark, +mkmk, +pnum} % Apply advanced typographic features
	]{Inconsolata} % Define the monospaced font
}

% Activate font settings based on specified flags
\ifbool{useebgaramond}{\useebgaramond}{\typeout{EB Garamond fonts are not applied.}} % Apply EB Garamond fonts if enabled
\ifbool{usekepler}{\usekepler}{\typeout{Kepler fonts are not applied.}} % Apply Kepler fonts if enabled
\ifbool{uselmodern}{\uselmodern}{\typeout{Latin Modern fonts are not applied.}} % Apply Latin Modern fonts if enabled
\ifbool{useoldlmodern}{\useoldlmodern}{\typeout{Old Latin Modern fonts are not applied.}} % Apply Old Latin Modern fonts if enabled

\ifbool{useinconsolata}{\useinconsolata}{\typeout{Inconsolata fonts are not applied.}} % Apply Inconsolata fonts if enabled
\ifbool{usefiramono}{\usefiramono}{\typeout{Fira Code fonts are not applied.}} % Apply Fira Mono fonts if enabled
\ifbool{usesourcecode}{\usesourcecode}{\typeout{Source Code fonts are not applied.}} % Apply Source Code fonts if enabled

\ifbool{usefirasans}{\usefirasans}{\typeout{Fira Sans fonts are not applied.}} % Apply Fira Sans fonts if enabled
\ifbool{uselibsans}{\uselibsans}{\typeout{Libertinus Sans fonts are not applied.}} % Apply Libertinus Sans fonts if enabled
\ifbool{usesourcesans}{\usesourcesans}{\typeout{Source Sans fonts are not applied.}} % Apply Source Sans fonts if enabled

% Command to set the default font size
\providecommand{\setglobalfontsize}[1]{\def\deffontsize{#1}} % Command to set font size

\AtEndPreamble{%
	% Resolve conflicts with existing math alphabet definitions
	\let\mathbfcal\relax
	\RequirePackage[%
		bb=bboldx,  % Extended Blackboard bold options for math notation
		cal=cm      % Classic calligraphic font style for math symbols
	]{mathalpha}  	% Additional math font styles for diverse notation
	    
	% Set a default font size if \deffontsize is not defined
	\ifx\deffontsize\undefined
		\setglobalfontsize{10pt} % Default to 10pt
	\fi
	    
	% Load the fontsize package
	\RequirePackage[fontsize=\deffontsize]{fontsize} % Load the fontsize package
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Custom Sectioning Commands
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage[explicit]{titlesec} % Package for customizing sectioning commands

% Define formatting for parts
\titleformat{\part}[display]
    {\normalfont\scshape\color{accentcolor}\RaggedLeft} % Formatting for part title
    {\Huge\partname~\thepart} % Format for part label
    {0pt} % No space between label and title
    {\titlerule\bigskip\LARGE #1} % Format for part title

% Use vertical fill for centring
\titlespacing*{\part}{0pt}{\fill}{\fill} % Vertically centers the part title

% Chapter formatting
\titleformat{\chapter}[frame]
    {\huge\scshape\sffamily\color{accentcolor}} % Font and color for chapter title
    {~\filright{\large Chapter~\thechapter}~} % Chapter number format
    {15pt} % Space between number and title
    {\filcenter #1} % Title formatting

\titlespacing*{\chapter}{0pt}{50pt}{100pt} % Spacing before and after chapter title

% Command for margin section numbering
\providecommand{\marginsecnumber}[1]{%
	\makebox[0pt][r]{#1\hspace{7.5pt}}%
}

% Section formatting
\titleformat{\section}[block]%
    {\Large\sffamily\scshape\color{accentcolor}} % Font and color for section title
    {\LARGE\marginsecnumber\thesection} % Section number format
    {0pt} % Space between number and title
    {#1\smallskip\hrule} % Title formatting

\titlespacing*{\section}{0pt}{10pt}{-10pt} % Spacing before and after section title

% Command for margin subsection numbering
\providecommand{\marginsubsecnumber}[1]{%
	\makebox[0pt][r]{#1\hspace{7.5pt}}%
}

% Subsection formatting
\titleformat{\subsection}[block]%
    {\large\sffamily\scshape\color{accentcolor}} % Font and color for subsection title
    {\Large\marginsubsecnumber\thesubsection} % Subsection number format
    {0pt} % Space between number and title
    {#1} % Title formatting

% Command for margin subsubsection numbering
\providecommand{\marginsubsubsecnumber}[1]{%
	\makebox[0pt][r]{#1\hspace{7.5pt}}%
}

% Subsubsection formatting
\titleformat{\subsubsection}[runin]%
    {\normalsize\sffamily\scshape\color{accentcolor}} % Font and color for subsubsection title
    {\large\marginsubsubsecnumber\thesubsubsection} % Subsubsection number format
    {0pt} % Space between number and title
    {#1.} % Title formatting

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Local Table of Contents
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage{etoc} % Load etoc package for local tables of contents

\etockeeporiginaltableofcontents % Preserve the original table of contents settings

% Command: \localtoc
% Description: Generates a local table of contents with distinct fonts for sections and subsections, and enhanced formatting.
\providecommand{\localtoc}{%
	\begingroup
	\etocsettocstyle{}{} % Clear default headings
	\etocsetnexttocdepth{section} % Display entries up to section level
	\etocsetstyle{section}
	{}{}{ % Formatting for each entry in the TOC
		\sffamily\scshape\etocnumber\hspace*{10pt}\etocname\nobreak
		\hskip5pt\dotfill\hskip5pt\nobreak
		\etocpage\par
	}{}
	{\color{accentcolor}\rule{\textwidth}{0.5pt}\medskip}
	\localtableofcontents % Generate the local table of contents
	{\medskip\noindent\color{accentcolor}\rule{\textwidth}{0.5pt}}
	\endgroup
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Customization of Table of Contents
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage[titles]{tocloft} % Load the tocloft package for enhanced customization of the Table of Contents

% Adjust the vertical spacing after section, subsection, and subsubsection numbers
\renewcommand{\cftpartafterpnum}{\vskip1pt}         % Space added after part numbers
\renewcommand{\cftchapafterpnum}{\vskip1pt}         % Space added after chapter numbers
\renewcommand{\cftsecafterpnum}{\vskip1pt}          % Space added after section numbers
\renewcommand{\cftsubsecafterpnum}{\vskip1pt}       % Space added after subsection numbers
\renewcommand{\cftsubsubsecafterpnum}{\vskip1pt}    % Space added after subsubsection numbers

% Increase the width for number alignment in the Table of Contents
\addtolength{\cftpartnumwidth}{2.5pt}      % Increase width for part number
\addtolength{\cftchapnumwidth}{5pt}      % Increase width for chapter number
\addtolength{\cftsecnumwidth}{5.0pt}       % Increase width for section number
\addtolength{\cftsubsecnumwidth}{5.0pt}    % Increase width for subsection number
\addtolength{\cftsubsubsecnumwidth}{5.0pt} % Increase width for subsubsection number

% Specify font styles for Table of Contents entries
\renewcommand{\cftpartfont}{\Large\sffamily\scshape}    % Font style for parts (large, small caps)
\renewcommand{\cftchapfont}{\large\sffamily\scshape}    % Font style for chapters (sans-serif, large, small caps)
\renewcommand{\cftsecfont}{\normalsize\scshape}         % Font style for sections (normal size, small caps)
\renewcommand{\cftsubsecfont}{\normalsize}              % Font style for subsections (normal size)
\renewcommand{\cftsubsubsecfont}{\normalsize}           % Font style for subsubsections (normal size)

% Configure the depth of section numbering and Table of Contents entries
\setcounter{secnumdepth}{4} % Set the depth for section numbering (part, chapter, section, subsection)
\setcounter{tocdepth}{2}    % Set the depth of Table of Contents entries (part, chapter, section)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Support for Creating Indexes
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage[makeindex]{imakeidx} % Package for index creation and management

\begin{filecontents}{csindex.ist}
quote '+'
columns 2
letter_group
symhead_positive "Symbols"
numhead_positive "Numbers"
headings_flag 1
heading_prefix "\\textbf{"heading_suffix "}\n"
delim_0 "\\dotfill"
delim_1 "\\dotfill"
delim_2 "\\dotfill"
delim_r "\\dotfill"
preamble "\\begin{theindex}\n\\rmfamily\n"
postamble "\n\\end{theindex}\n"
\end{filecontents}

\makeindex[intoc, title=Index, options=-s csindex] % Configure and create the index with custom style

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Hyperlinks and Metadata Configuration
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage[pdfusetitle]{hyperref} % Provides hyperlink capabilities and document metadata management
\RequirePackage{bookmark}              % Manages PDF bookmarks for easier navigation
\RequirePackage{xurl}                  % Automatically breaks long URLs to fit within the document

% Configure hyperref settings to enhance document appearance and metadata
\hypersetup{%
	pdfsubject={computer science},    % Set the subject of the PDF; fallback to \@course if not defined
	pdfkeywords={computer science},   % Define keywords for the PDF; fallback to \@course if not defined
	colorlinks=true,                  % Enable colored hyperlinks
	citecolor=accentcolor,            % Set color for citation links
	linkcolor=accentcolor,            % Set color for internal document links
	urlcolor=accentcolor,             % Set color for URLs
	frenchlinks=true,                 % Use French-style links with small caps
	unicode=true,                     % Enable Unicode characters in links
	bookmarksnumbered=true,           % Number bookmarks in the PDF for better navigation
	breaklinks=true,                  % Allow line breaks in long URLs
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Page Style Customizations for Document Structure
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Front matter
\let\oldfrontmatter\frontmatter % Preserve the original \frontmatter command
\renewcommand{\frontmatter}{%
	\oldfrontmatter % Execute the original \frontmatter command
	\pagestyle{plain} % Set page style to plain for front matter
}

% Main matter
\let\oldmainmatter\mainmatter % Preserve the original \mainmatter command
\renewcommand{\mainmatter}{%
	\oldmainmatter % Execute the original \mainmatter command
	\@openrighttrue % Ensure chapters begin on right-hand pages
	\pagestyle{fancy} % Apply the fancy page style to the main matter
}

% Appendices
\let\oldappendix\appendix % Preserve the original \appendix command
\renewcommand{\appendix}{%
	\oldappendix % Execute the original \appendix command
	\@openrighttrue % Ensure appendices begin on right-hand pages
	\renewcommand\partname{Appendices} % Modify chapter name to 'Appendices'
}

% Back matter
\let\oldbackmatter\backmatter % Preserve the original \backmatter command
\renewcommand{\backmatter}{%
	\oldbackmatter % Execute the original \backmatter command
	\@openrighttrue % Ensure sections begin on right-hand pages
	\bookmarksetup{startatroot} % Configure bookmarks to start at the root level
	\pagestyle{plain} % Apply the plain page style to the back matter
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Redefine the \maketitle Command
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Define the \subtitle command with an optional argument
% This command sets the subtitle for the document
\providecommand{\subtitle}[1]{%
	\providecommand{\@subtitle}{#1} % Define or redefine the global subtitle command
}

% Redefine the \maketitle command
% This command formats the title, subtitle, authors, and date of the document
\renewcommand{\maketitle}{%
	\vspace*{\fill} % Vertically center the content on the page
	\pagestyle{empty} % Set the page style to 'empty' (no page numbers)

	\begingroup
	\raggedleft % Right-align the content
	% Title
	{%
		\scshape\huge
		\ifx\@title\undefined
		\else\@title
		\fi\par
		\vspace{1em}\hrule\bigskip
	} % Title with horizontal rule

	% Subtitle
	{%
		\normalsize\itshape
		\ifx\@subtitle\undefined
		\else\@subtitle
		\fi\par
		\medskip
	} % Subtitle with italic style

	% Authors
	{%
		\large\scshape
		\ifx\@author\undefined
		\else\@author
		\fi\par
		\medskip
	} % Authors in small caps

	% Date
	{%
		\hfill\scshape\normalsize
		\ifx\@date\undefined
		\else\@date
		\fi
	} % Date with small caps
	\endgroup

	\vspace*{\fill} % Vertically center the content on the page
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Command for Generating the Copyright Page
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\providecommand{\makecopyrightpage}{%
	\thispagestyle{empty} % Remove headers and footers for this page
	\begingroup % Begin a local group to confine the scope of changes
	\cleardoublepage\null\vfill % Center the content vertically on the page
	\small % Set the font size as small for the copyright page
	\centering % Center the text horizontally

	% Title and Edition Information
	\textsc{\large\@title}\par\medskip % Title of the work in small caps and large size

	% Copyright Information
	\textcopyright~\@date~by~\@author\par % Copyright symbol, date, and author information
	All rights reserved.\par % Standard copyright notice

	% License Information
	\justify % Justify the license text for better alignment
	This work is distributed under the terms of the Creative Commons
	Attribution-NonCommercial-NoDerivatives 4.0 International License
	(``CC BY-NC-ND 4.0"). The principal conditions of this license
	stipulate that attribution must be duly provided, including proper
	credit to the original author(s), a direct hyperlink to the license,
	and a clear statement of any modifications made to the original work;
	however, such attribution must not imply endorsement by the licensor.
	The material may not be utilised for any commercial purposes.
	The material may not be remixed, transformed, or built upon in any
	manner that results in a modified work, and any redistributed material
	must remain in its original form. Further, the material must not
	be used for any purposes involving artificial intelligence or machine
	learning applications. Full details and the complete legal text of this
	license can be accessed at the following URL:
	\texttt{\url{https://creativecommons.org/licenses/by-nc-nd/4.0/}}.
	\par

	% Additional Details
	\vspace{15pt} % Add vertical space before the additional details
	\begin{center}
		This edition was published on \@date\par % Information about the edition and publication date
	\end{center}
	\vspace*{15pt} % Add vertical space after the additional details

	\endgroup % End the local group
	\cleardoublepage % Ensure the following content starts on a new page
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Package for customizing lists
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage{enumitem} % Use the enumitem package for adjusting the appearance and behaviour of list environments

% Global settings for lists
\setlist{nosep, noitemsep} % Remove extra vertical spacing between items in all list environments

% Customize enumerate labels
\setlist[enumerate, 1]{label=(\arabic*)} % Label format for the first level of enumeration
\setlist[enumerate, 2]{label=(\alph*)}  % Label format for the second level of enumeration

% Redefine bullet symbols for itemize environment
\renewcommand{\labelitemi}{\ensuremath{\color{accentcolor}\bullet}} % Bullet symbol for first level
\renewcommand{\labelitemii}{\ensuremath{\color{accentcolor}\circ}}   % Circle symbol for second level
\renewcommand{\labelitemiii}{\ensuremath{\color{accentcolor}\ast}}    % Asterisk symbol for third level
\renewcommand{\labelitemiv}{\ensuremath{\color{accentcolor}\textasteriskcentered}} % Asterisk symbol for fourth level

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Packages for Typesetting Algorithms
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Load the algorithm2e package with specific options for algorithm formatting
\RequirePackage[%
	algoruled,     % Encloses algorithms in a ruled style for improved readability
	linesnumbered, % Enables line numbering for easier reference to individual steps
	longend,       % Manages long end statements for a cleaner layout
	vlined         % Adds vertical lines to enhance the structure
]{algorithm2e}

% Customize the appearance and style of the algorithms
\SetAlFnt{\small}               % Set the algorithm text to a small font size for a more compact presentation
\SetAlCapFnt{\normalsize}       % Use a normal font size for captions to provide emphasis
\SetAlCapNameFnt{\normalsize}   % Set the font size of algorithm names to normal for better visibility
\SetAlgoCaptionSeparator{.}     % Use a period as a separator between the caption and the algorithm content
\SetAlgoNlRelativeSize{-2}      % Reduce the size of line numbers to lessen distraction from the main text
\SetNlSty{texttt}{[}{]}         % Style line numbers in a typewriter font, enclosed in square brackets

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Package for Creating Framed Environments
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Load the mdframed package to create customizable framed environments
\RequirePackage[%
	skipabove=10pt,               % Vertical space above the frame
	skipbelow=10pt,               % Vertical space below the frame
	ntheorem,                     % Use with the ntheorem package for theorem-like environments
	framemethod=Tikz              % Use TikZ for frame styling
]{mdframed} % Configure vertical skip distances and enable TikZ for styling

% Load the tcolorbox package for advanced color box options
\RequirePackage[most]{tcolorbox} % Include extensive features for colored boxes

% Define a custom-framed environment with TikZ settings
\newmdenv[%
	font=\normalfont\small,       % Font for the content
	frametitlefont=\bfseries,     % Title font style
        tikzsetting={draw=black},     % Set the border color of the frame to black
	backgroundcolor=none,         % Set background to transparent
	skipabove=10pt,               % Vertical space above the frame
	skipbelow=10pt,               % Vertical space below the frame
	innerleftmargin=7.5pt,        % Left margin inside the frame
	innerrightmargin=7.5pt,       % Right margin inside the frame
	innertopmargin=10pt,          % Top margin inside the frame
	innerbottommargin=10pt,       % Bottom margin inside the frame
	roundcorner=1pt               % Set rounded corners with a radius of 1pt
]{tboxed} % Custom framed environment named "tboxed"

% Define another custom-framed environment with specific formatting
\newmdenv[%
	font=\normalfont\small,       % Font for the content
	frametitlefont=\bfseries,     % Title font style
        hidealllines=true,            % Hide all frame lines
	backgroundcolor={accentcolor!15!white}, % Set a semi-transparent background color
	skipabove=10pt,               % Vertical space above the frame
	skipbelow=10pt,               % Vertical space below the frame
	innerleftmargin=7.5pt,        % Left margin inside the frame
	innerrightmargin=7.5pt,       % Right margin inside the frame
	innertopmargin=10pt,          % Top margin inside the frame
	innerbottommargin=10pt,       % Bottom margin inside the frame
	roundcorner=1pt               % Set rounded corners with a radius of 2pt
]{colbox} % Custom framed environment named "colbox"

% Create a new counter for construction
\newcounter{constructioncounter}[section]

% Define the "construction" environment using mdframed
\newenvironment{construction}[1][Construction]{%
	\refstepcounter{constructioncounter} % Increment the counter
	\newmdenv[%
		font=\normalfont\small, % Font for the content
		frametitlebackgroundcolor=none, % No background color for the title
		frametitlefont=\scshape\sffamily\color{accentcolor}, % Title font style
		frametitle={Construction~\thesection.\theconstructioncounter~(#1).}, % Title format
		frametitlerulewidth=0.75pt, % Set the rule thickness
		linewidth=0.75pt, % Frame line width
		linecolor=black, % Frame line color
		innertopmargin=7.5pt, % Top inner margin
		innerbottommargin=7.5pt, % Bottom inner margin
		innerleftmargin=5pt, % Left inner margin
		innerrightmargin=5pt, % Right inner margin
		frametitlerule=true, % Add a rule under the title
		leftline=false, % No left vertical line
		rightline=false % No right vertical line
	]{constructioninner}%
	\begin{constructioninner}
		}{%
	\end{constructioninner}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Glossaries and Acronyms
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Load the glossaries-extra package with various options
\RequirePackage[%
	automake,             % Automatically updates glossaries when changes are detected
	acronym,              % Support for acronyms in the glossary
	symbols,              % Inclusion of symbols in the glossary
	nonumberlist,         % Prevents numbering of glossary entries
	nogroupskip,          % Avoids extra vertical space between different glossary groups
	indexonlyfirst,       % Indexes only the first occurrence of each glossary entry
	stylemods=longextra,  % Applies extended formatting styles to glossary entries
	nopostdot,            % Omits the period at the end of glossary descriptions
	toc                   % Includes the glossary in the table of contents
]{glossaries-extra}

% Initialize glossaries
\makeglossaries

% Define the abbreviation style for acronyms
\setabbreviationstyle[acronym]{long-short}

% Customize the font for glossary names
\renewcommand{\glsnamefont}[1]{{\color{accentcolor}\sffamily#1}}

% Customize the preamble and postamble for glossaries
\renewcommand{\glossarypreamble}{\begin{sffamily}\small} % Set font for glossary preamble
\renewcommand{\glossarypostamble}{\end{sffamily}} % End font customization for glossary

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Abstract Environment Definition
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newenvironment{abstract}{%
	\if@twocolumn
		\section*{\abstractname} % Unnumbered section for abstract in two-column mode
	\else\small\vspace{-1em} % Adjust font size and vertical space in single-column mode
		\begin{center}
			{\scshape\abstractname\vspace{-.5em}\vspace{\z@}} % Title in small caps with vertical spacing
		\end{center} % Center the abstract title
		\quotation\sffamily % Start the quotation environment for abstract content
	\fi
}{%
	\if@twocolumn
		% No action is needed for the two-column mode
	\else
		\endquotation % End the quotation environment in single-column mode
	\fi
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Appendix Handling
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Load the appendix package with specific options
\RequirePackage[%
	toc,        % Include appendices in the table of contents
	page,       % Start each appendix on a new page
	title,      % Prefix 'Appendix' to appendix titles
	header,     % Prefix 'Appendix' to headers on appendix pages
	titletoc    % Prefix 'Appendix' in the table of contents entries
]{appendix} % Provides advanced appendix handling commands

% Format appendix page name
\xpretocmd{\appendixpagename}{\normalfont\Huge\scshape}{}{} % Format appendix page name in small caps

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Customizations for verbatim environments
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage{verbatim}  % Allows inclusion of unformatted text or code snippets
\RequirePackage{fancyvrb}  % Provides enhanced verbatim environments and features

% Save the original verbatim process line command
\providecommand{\savedverbatim@processline}{}
\let\savedverbatim@processline=\verbatim@processline

% Redefine the verbatim process line command
\renewcommand{\verbatim@processline}{%
	\let\verbatim@processline=\savedverbatim@processline  % Restore the original command
	\if\relax\the\verbatim@line\relax  % Check if the line is empty
	\else
		\the\verbatim@line\par  % Print the verbatim line
	\fi
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Packages for Footnotes and Multi-Column Formatting
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage[bottom, multiple, hang]{footmisc} % Customizes footnote formatting: positioning, multiple footnotes per page, and hanging indentation
\RequirePackage{footnote}               % Allows footnotes within the document
\RequirePackage{multicol}               % Supports multi-column formatting

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Packages for Tables and Figures
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage{adjustbox}           % Advanced adjustment and manipulation of content
\RequirePackage{array}               % Enhancements for array and tabular environments
\RequirePackage{booktabs}            % Professional-quality lines and rules in tables
\RequirePackage{longtable}           % Support for tables that span multiple pages
\RequirePackage{multirow}            % Allows cells to span multiple rows in tables
\RequirePackage{tabularx}            % Flexible tables with adjustable width
\RequirePackage{wrapfig}             % Text wrapping around figures

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Packages for Captions and Graphics
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage[font={rm, sc}]{caption} % Customizes caption formatting with font options
\RequirePackage{float} % Precise control over the placement of figures and tables
\RequirePackage{graphics} % Standard package for graphics inclusion
\RequirePackage{graphicx} % Inclusion of images in various formats
\RequirePackage{subcaption} % Subfigures and subcaptions within figures

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Drawings and Diagrams
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\providecommand{\usetikz}{%
	\RequirePackage{tikz} % Load TikZ for creating graphics and diagrams
	\RequirePackage{tikz-cd} % Load TikZ-cd for commutative diagrams
	\RequirePackage{pgfplots} % Load pgfplots for advanced plotting
	\pgfplotsset{compat=1.18} % Set compatibility with version 1.18
}

\ifbool{usetikz}{\usetikz}{\typeout{TikZ and related packages are not included.}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Epigraphs and Dedications
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage{epigraph} % Load the epigraph package for handling epigraphs

% Set up epigraph formatting
\setlength\epigraphrule{0.65pt} % Sets the thickness of the rule under the epigraph
\renewcommand\textflush{flushright} % Aligns the epigraph text to the right
\renewcommand\epigraphsize{\small} % Sets the font size of the epigraph
\setlength\epigraphwidth{0.65\textwidth} % Defines the width of the epigraph text block

% Command to format individual dedication entries
% Arguments:
%   #1: The dedication text
%   #2: The author's name
\providecommand{\dedication}[2]{%
	\epigraph{#1}{\medskip\normalfont\scshape\par#2} % Formats the dedication with the text and author
	\bigskip % Adds vertical space after the dedication
}

% Command to generate a complete set of dedications
% Argument:
%   #1: List of dedication entries formatted using the \dedication command
\providecommand{\generateDedications}[1]{%
	\begin{center}
		\thispagestyle{empty} % Removes page numbering and header/footer on this page
		\vspace*{\fill} % Adds vertical space before and after the content
		\large#1 % Formats the list of dedications
		\vspace*{\fill} % Adds vertical space after the content
	\end{center}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Cleveref Settings
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage{cleveref} % Load the cleveref package for intelligent cross-referencing

% Define plural and singular names for various types of references
\Crefname{algorithm}{Algorithm}{Algorithms}
\Crefname{chapter}{Chapter}{Chapters}
\Crefname{code}{Program}{Programs}
\Crefname{construction}{Construction}{Constructions}
\Crefname{part}{Part}{Parts}
\Crefname{section}{Section}{Sections}
\Crefname{subsection}{Subsection}{Subsections}
\Crefname{subsubsection}{Subsubsection}{Subsubsections}

% Define lowercase names for various types of references
\crefname{algorithm}{algorithm}{algorithms}
\crefname{chapter}{chapter}{chapters}
\crefname{code}{program}{programs}
\crefname{construction}{construction}{constructions}
\crefname{part}{part}{parts}
\crefname{section}{section}{sections}
\crefname{subsection}{subsection}{subsections}
\crefname{subsubsection}{subsubsection}{subsubsections}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Definition of New Environments
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Custom QED symbol rendered in the accent color
\providecommand{\QEDsymbol}{\color{accentcolor}\ensuremath{\blacksquare}}
% Replace the default QED symbol with the custom symbol
\renewcommand{\qedsymbol}{\QEDsymbol}

% Command to define new environments with colored boxes
\providecommand{\newcolorboxes}[6]{%
	% Arguments:
	%   #1: Environment name
	%   #2: Display title
	%   #3: Background color
	%   #4: Title font color
	%   #5: Content font style
	%   #6: Label prefix for references
	\newtcbtheorem[number within=chapter]{#1}{#2}{%
		enhanced,
		colback=#3!5,                     % Background color with transparency
		colframe=#3!80!black,             % Frame color
		arc=1pt,                          % Corner radius
		boxrule=0.5pt,                    % Frame thickness
		fonttitle=\color{#4}\sffamily\scshape, % Title font style
		before upper={\parindent15pt},    % Indentation before content
		before lower={\parindent15pt},    % Indentation after content
		fontupper={\color{black}\normalfont#5}, % Main content font style
		fontlower={\color{black}\normalfont#5}, % Lower content font style
		right=10pt, top=10pt, bottom=10pt, % Box padding
		attach boxed title to top left={yshift=-5pt,xshift=10pt}, % Title position
		boxed title style={               % Title box style
				colback=#3!20,
				colframe=#3!80!black,
				boxrule=0.5pt
			},
		label={#6:\thetcbcounter},        % Reference label prefix
	}{#6}%
}

% Command to define fancy theorem environments
\providecommand{\usefancythm}{

	% Define colored environments for theorems and related content
	\newcolorboxes{corollary}{Corollary}{RoyalBlue4!50!white}{black}{\itshape}{cor}
	\newcolorboxes{lemma}{Lemma}{RoyalBlue4!60!white}{black}{\itshape}{lem}
	\newcolorboxes{proposition}{Proposition}{RoyalBlue4!70!white}{black}{\itshape}{prop}
	\newcolorboxes{theorem}{Theorem}{RoyalBlue4!80!white}{black}{\itshape}{thm}

	\newcolorboxes{assumption}{Assumption}{DeepSkyBlue3!80!white}{black}{\itshape}{assm}
	\newcolorboxes{claim}{Claim}{DeepSkyBlue3!70!white}{black}{\itshape}{clm}
	\newcolorboxes{conjecture}{Conjecture}{DeepSkyBlue3!60!white}{black}{\itshape}{conj}
	\newcolorboxes{fact}{Fact}{DeepSkyBlue3!50!white}{black}{\itshape}{fact}
	\newcolorboxes{property}{Property}{DeepSkyBlue3!40!white}{black}{\itshape}{prop}

	\newcolorboxes{definition}{Definition}{DodgerBlue1!90!white}{black}{\normalfont}{def}
	\newcolorboxes{example}{Example}{SpringGreen4!80!white}{black}{\normalfont}{ex}
	\newcolorboxes{exercise}{Exercise}{SpringGreen4!60!white}{black}{\normalfont}{exer}
	\newcolorboxes{problem}{Problem}{SpringGreen4!50!white}{black}{\normalfont}{prob}
	\newcolorboxes{question}{Question}{SpringGreen4!40!white}{black}{\normalfont}{ques}

	\newcolorboxes{note}{Note}{Cyan4!70!white}{black}{\normalfont}{note}
	\newcolorboxes{remark}{Remark}{Cyan4!60!white}{black}{\normalfont}{rem}
	\newcolorboxes{solution}{Solution}{Cyan4!50!white}{black}{\normalfont}{sol}

	\newcolorboxes{important}{Important}{DeepPink4!70!white}{black}{\sffamily}{imp}
	\newcolorboxes{keypoint}{Keypoint}{DeepPink4!60!white}{black}{\sffamily}{key}
	\newcolorboxes{highlight}{Highlight}{DeepPink4!50!white}{black}{\sffamily}{high}

	% Command to enable footnotes in specified environments
	\providecommand{\enablefootnotes}[1]{%
		\BeforeBeginEnvironment{##1}{\savenotes}%
		\AfterEndEnvironment{##1}{\spewnotes}%
	}

	% Enable footnotes for each environment directly
	\enablefootnotes{assumption}
	\enablefootnotes{claim}
	\enablefootnotes{conjecture}
	\enablefootnotes{corollary}
	\enablefootnotes{definition}
	\enablefootnotes{example}
	\enablefootnotes{exercise}
	\enablefootnotes{fact}
	\enablefootnotes{highlight}
	\enablefootnotes{important}
	\enablefootnotes{keypoint}
	\enablefootnotes{lemma}
	\enablefootnotes{note}
	\enablefootnotes{problem}
	\enablefootnotes{property}
	\enablefootnotes{proposition}
	\enablefootnotes{question}
	\enablefootnotes{theorem}
	\enablefootnotes{remark}
	\enablefootnotes{solution}

	% Command to define cross-reference formats
	\providecommand{\definecrefformat}[3]{%
		\crefname{tcb@cnt@##1}{\MakeLowercase{##2}}{\MakeLowercase{##3}} % Define cref format for lowercase references
		\Crefname{tcb@cnt@##1}{##2}{##3} % Define cref format for capitalized references
	}

	% Define cross-reference formats directly
	\definecrefformat{theorem}{Theorem}{Theorems}
	\definecrefformat{lemma}{Lemma}{Lemmas}
	\definecrefformat{corollary}{Corollary}{Corollaries}
	\definecrefformat{proposition}{Proposition}{Propositions}
	\definecrefformat{claim}{Claim}{Claims}
	\definecrefformat{conjecture}{Conjecture}{Conjectures}
	\definecrefformat{fact}{Fact}{Facts}
	\definecrefformat{property}{Property}{Properties}
	\definecrefformat{definition}{Definition}{Definitions}
	\definecrefformat{example}{Example}{Examples}
	\definecrefformat{exercise}{Exercise}{Exercises}
	\definecrefformat{problem}{Problem}{Problems}
	\definecrefformat{question}{Question}{Questions}
	\definecrefformat{note}{Note}{Notes}
	\definecrefformat{remark}{Remark}{Remarks}
	\definecrefformat{solution}{Solution}{Solutions}
	\definecrefformat{important}{Important}{Importants}
	\definecrefformat{keypoint}{Keypoint}{Keypoints}
	\definecrefformat{highlight}{Highlight}{Highlights}
	\definecrefformat{assumption}{Assumption}{Assumptions}
}

% Command to define standard theorem environments
\providecommand{\usenormalthm}{%

	% Theorem Style
	\declaretheoremstyle[%
		spaceabove=\topsep,
		spacebelow=\topsep,
		postheadspace=5pt,
		headformat={\makebox[0pt][r]{\NUMBER\hspace{7.5pt}}\NAME \NOTE},
		headfont=\scshape\sffamily\color{accentcolor},
		notefont=\scshape\sffamily\color{accentcolor},
		bodyfont=\normalfont,
		numberwithin=chapter,
		qed=$\color{accentcolor}\scriptscriptstyle\clubsuit$,
            headpunct={.}
	]{thmstyle}

	% Definition Style
	\declaretheoremstyle[%
		spaceabove=\topsep,
		spacebelow=\topsep,
		postheadspace=5pt,
		headformat={\makebox[0pt][r]{\NUMBER\hspace{7.5pt}}\NAME \NOTE},
		headfont=\scshape\sffamily\color{accentcolor},
		notefont=\scshape\sffamily\color{accentcolor},
		bodyfont=\normalfont,
		numberwithin=chapter,
		qed=$\color{accentcolor}\scriptscriptstyle\clubsuit$,
		headpunct={.}
	]{defstyle}

	% Remark Style
	\declaretheoremstyle[%
		spaceabove=\topsep,
		spacebelow=\topsep,
		postheadspace=5pt,
		headformat={\makebox[0pt][r]{\NUMBER\hspace{7.5pt}}\NAME \NOTE},
		headfont=\scshape\sffamily\color{accentcolor},
		notefont=\scshape\sffamily\color{accentcolor},
		bodyfont=\normalfont,
		numberwithin=chapter,
            qed=$\color{accentcolor}\scriptscriptstyle\blacktriangleright$,
		headpunct={.}
	]{remarkstyle}

	% Highlight Style
	\declaretheoremstyle[%
		spaceabove=\topsep,
		spacebelow=\topsep,
		postheadspace=5pt,
		headformat={\makebox[0pt][r]{\NUMBER\hspace{7.5pt}}\NAME \NOTE},
		headfont=\scshape\sffamily\color{accentcolor},
		notefont=\scshape\sffamily\color{accentcolor},
		bodyfont=\normalfont\sffamily,
		numberwithin=chapter,
		qed=$\color{accentcolor}\scriptscriptstyle\blacklozenge$,
		headpunct={.}
	]{hltstyle}

	% Proof Style
	\declaretheoremstyle[%
		headfont=\sffamily\scshape\color{accentcolor},
		notefont=\sffamily\scshape\color{accentcolor},
		bodyfont=\normalfont,
		postheadspace=5pt,
		numbered=no,
		headpunct={.},
		qed=$\color{accentcolor}\scriptscriptstyle\blacksquare$
	]{proofstyle}

	% Theorem and related environments
	\declaretheorem[style=thmstyle,name=Theorem]{theorem}
	\declaretheorem[style=thmstyle,sibling=theorem]{assumption}
	\declaretheorem[style=thmstyle,sibling=theorem]{claim}
	\declaretheorem[style=thmstyle,sibling=theorem]{conjecture}
	\declaretheorem[style=thmstyle,sibling=theorem]{corollary}
	\declaretheorem[style=thmstyle,sibling=theorem]{lemma}
	\declaretheorem[style=thmstyle,sibling=theorem]{property}
	\declaretheorem[style=thmstyle,sibling=theorem]{proposition}

	% Definition and related environments
	\declaretheorem[style=defstyle,sibling=theorem]{definition}
	\declaretheorem[style=defstyle,sibling=theorem]{example}
	\declaretheorem[style=defstyle,sibling=theorem]{exercise}
	\declaretheorem[style=defstyle,sibling=theorem]{problem}
	\declaretheorem[style=defstyle,sibling=theorem]{question}

	% Remark and related environments
	\declaretheorem[style=remarkstyle,sibling=theorem]{note}
	\declaretheorem[style=remarkstyle,sibling=theorem]{remark}
	\declaretheorem[style=remarkstyle,sibling=theorem]{solution}

	% Highlight styles
	\declaretheorem[style=hltstyle,name=Important]{important}
	\declaretheorem[style=hltstyle]{highlight}
	\declaretheorem[style=hltstyle]{keypoint}

	% Redefine proof environment
	\let\proof\relax
	\let\endproof\relax
	\declaretheorem[style=proofstyle]{proof}

	% Command to define cross-reference formats
	\providecommand{\definecrefformat}[3]{%
		\crefname{##1}{\MakeLowercase{##2}}{\MakeLowercase{##3}} % Define cref format for lowercase references
		\Crefname{##1}{##2}{##3} % Define cref format for capitalized references
	}

	% Define cross-reference formats directly
	\definecrefformat{theorem}{Theorem}{Theorems}
	\definecrefformat{lemma}{Lemma}{Lemmas}
	\definecrefformat{corollary}{Corollary}{Corollaries}
	\definecrefformat{proposition}{Proposition}{Propositions}
	\definecrefformat{claim}{Claim}{Claims}
	\definecrefformat{conjecture}{Conjecture}{Conjectures}
	\definecrefformat{fact}{Fact}{Facts}
	\definecrefformat{property}{Property}{Properties}
	\definecrefformat{definition}{Definition}{Definitions}
	\definecrefformat{example}{Example}{Examples}
	\definecrefformat{exercise}{Exercise}{Exercises}
	\definecrefformat{problem}{Problem}{Problems}
	\definecrefformat{question}{Question}{Questions}
	\definecrefformat{note}{Note}{Notes}
	\definecrefformat{remark}{Remark}{Remarks}
	\definecrefformat{solution}{Solution}{Solutions}
	\definecrefformat{important}{Important}{Importants}
	\definecrefformat{keypoint}{Keypoint}{Keypoints}
	\definecrefformat{highlight}{Highlight}{Highlights}
	\definecrefformat{assumption}{Assumption}{Assumptions}
}

\ifbool{usefancythm}{\usefancythm}{}
\ifbool{usenormalthm}{\usenormalthm}{}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Bibliography Management with BibLaTeX
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Command to configure the BibLaTeX package with specific settings
\providecommand{\usebiblatex}{%
	% Load the BibLaTeX package with advanced configuration options
	\RequirePackage[%
		hyperref=auto,         % Ensure compatibility with the hyperref package
		defernumbers=true,     % Delay reference number assignment until after sorting
		style=alphabetic,      % Use alphabetic style for citations
		backref=true,          % Enable back-references from bibliography to citations
		sorting=anyt,          % Sort entries by their appearance in the text
		maxalphanames=99,      % Allow up to 99 names in the alphabetic label
		maxnames=999,          % Display up to 999 names in citations
		backend=biber          % Use Biber as the backend processor
	]{biblatex} % End of package options

	% Set the font size for bibliography entries
	\renewcommand*{\bibfont}{\small} % Define bibliography font size as 'small'

	% Customize back-reference strings in the bibliography
	\DefineBibliographyStrings{english}{
		backrefpage={\unskip Cited on page},  % Singular form for back-reference page
		backrefpages={\unskip Cited on pages} % Plural form for back-reference pages
	}
}

% Command to apply sorted entries with BibLaTeX
\providecommand{\usesrtbiblatex}{
	\usebiblatex % Apply the primary BibLaTeX setup
	\DeclareBibliographyCategory{cited} % Redefine the category for cited entries
	\AtEveryCitekey{\addtocategory{cited}{\thefield{entrykey}}} % Add entries to the 'cited' category
}

% Bibliography Management Logic
\providecommand{\setupbibliography}{%
	\ifthenelse{\boolean{usebiblatex}}{%
		% If BibLaTeX is enabled
		\usebiblatex
	}{%
		\ifthenelse{\boolean{usesrtbiblatex}}{%
			% If sorted BibLaTeX is enabled
			\usesrtbiblatex
		}{%
			% Fallback to default bibliography style
			\typeout{Default bibliography style will be used as BibLaTeX is not enabled.}
			\bibliographystyle{alpha}
		}}}
% Usage
\setupbibliography

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Load necessary package for code listings
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Code for listings package and styles
\providecommand{\usecodelists}{%

        \RequirePackage{listings}
        
        % Define Rust language for the listings package
        \lstdefinelanguage{Rust}{%
        sensitive=true,
        morecomment=[l]{//},
        morecomment=[s]{/*}{*/},
        moredelim=[s][{\itshape\color{Snow1}}]{\#[}{]},
        morestring=[b]{"},
        alsodigit={},
        alsoother={},
        alsoletter={!},
        % Control flow keywords
        morekeywords={break, continue, else, for, if, in, loop, match, return, while},
        % Variable-related keywords
        morekeywords={as, const, let, move, mut, ref, static},
        % Declaration-related keywords
        morekeywords={dyn, enum, fn, impl, Self, self, struct, trait, type, union, use, where},
        % Modularisation-related keywords
        morekeywords={crate, extern, mod, pub, super},
        % Marker keywords
        morekeywords={unsafe},
        % Reserved identifiers
        morekeywords={abstract, alignof, become, box, do, final, macro, offsetof, override, priv, proc, pure, sizeof, typeof, unsized, virtual, yield},
        % Traits
        morekeywords=[2]{Add, AddAssign, Any, AsciiExt, AsInner, AsInnerMut, AsMut, AsRawFd, AsRawHandle, AsRawSocket, AsRef, Binary, BitAnd, BitAndAssign, Bitor, BitOr, BitOrAssign, BitXor, BitXorAssign, Borrow, BorrowMut, Boxed, BoxPlace, BufRead, BuildHasher, CastInto, CharExt, Clone, CoerceUnsized, CommandExt, Copy, Debug, DecodableFloat, Default, Deref, DerefMut, DirBuilderExt, DirEntryExt, Display, Div, DivAssign, DoubleEndedIterator, DoubleEndedSearcher, Drop, EnvKey, Eq, Error, ExactSizeIterator, ExitStatusExt, Extend, FileExt, FileTypeExt, Float, Fn, FnBox, FnMut, FnOnce, Freeze, From, FromInner, FromIterator, FromRawFd, FromRawHandle, FromRawSocket, FromStr, FullOps, FusedIterator, Generator, Hash, Hasher, Index, IndexMut, InPlace, Int, Into, IntoCow, IntoInner, IntoIterator, IntoRawFd, IntoRawHandle, IntoRawSocket, IsMinusOne, IsZero, Iterator, JoinHandleExt, LargeInt, LowerExp, LowerHex, MetadataExt, Mul, MulAssign, Neg, Not, Octal, OpenOptionsExt, Ord, OsStrExt, OsStringExt, Packet, PartialEq, PartialOrd, Pattern, PermissionsExt, Place, Placer, Pointer, Product, Put, RangeArgument, RawFloat, Read, Rem, RemAssign, Seek, Shl, ShlAssign, Shr, ShrAssign, Sized, SliceConcatExt, SliceExt, SliceIndex, Stats, Step, StrExt, Sub, SubAssign, Sum, Sync, TDynBenchFn, Terminal, Termination, ToOwned, ToSocketAddrs, ToString, Try, TryFrom, TryInto, UnicodeStr, Unsize, UpperExp, UpperHex, WideInt, Write, Send},
        % Primitive types
        morekeywords=[3]{bool, char, f32, f64, i8, i16, i32, i64, isize, str, u8, u16, u32, u64, unit, usize, i128, u128},
        % Prelude value constructors
        morekeywords=[4]{Err, false, None, Ok, Some, true},
        % Additional types
        morekeywords=[3]{AccessError, Adddf3, AddI128, AddoI128, AddoU128, ADDRESS, ADDRESS64, addrinfo, ADDRINFOA, AddrParseError, Addsf3, AddU128, advice, aiocb, Alignment, AllocErr, AnonPipe, Answer, Arc, Args, ArgsInnerDebug, ArgsOs, Argument, Arguments, ArgumentV1, Ashldi3, Ashlti3, Ashrdi3, Ashrti3, AssertParamIsClone, AssertParamIsCopy, AssertParamIsEq, AssertUnwindSafe, AtomicBool, AtomicPtr, Attr, auxtype, auxv, BackPlace, BacktraceContext, Barrier, BarrierWaitResult, Bencher, BenchMode, BenchSamples, BinaryHeap, BinaryHeapPlace, blkcnt, blkcnt64, blksize, BOOL, boolean, BOOLEAN, BoolTrie, BorrowError, BorrowMutError, Bound, Box, bpf, BTreeMap, BTreeSet, Bucket, BucketState, Buf, BufReader, BufWriter, Builder, BuildHasherDefault, BY, BYTE, Bytes, CannotReallocInPlace, cc, Cell, Chain, CHAR, CharIndices, CharPredicateSearcher, Chars, CharSearcher, CharsError, CharSliceSearcher, CharTryFromError, Child, ChildPipes, ChildStderr, ChildStdin, ChildStdio, ChildStdout, Chunks, ChunksMut, ciovec, clock, clockid, Cloned, cmsgcred, cmsghdr, CodePoint, Color, ColorConfig, Command, CommandEnv, Component, Components, CONDITION, condvar, Condvar, CONSOLE, CONTEXT, Count, Cow, cpu, CRITICAL, CStr, CString, CStringArray, Cursor, Cycle, CycleIter, daddr, DebugList, DebugMap, DebugSet, DebugStruct, DebugTuple, Decimal, Decoded, DecodeUtf16, DecodeUtf16Error, DecodeUtf8, DefaultEnvKey, DefaultHasher, dev, device, Difference, Digit32, DIR, DirBuilder, dircookie, dirent, dirent64, DirEntry, Discriminant, DISPATCHER, Display, Divdf3, Divdi3, Divmoddi4, Divmodsi4, Divsf3, Divsi3, Divti3, dl, Dl, Dlmalloc, Dns, DnsAnswer, DnsQuery, dqblk, Drain, DrainFilter, Dtor, Duration, DwarfReader, DWORD, DWORDLONG, DynamicLibrary, Edge, EHAction, EHContext, Elf32, Elf64, Empty, EmptyBucket, EncodeUtf16, EncodeWide, Entry, EntryPlace, Enumerate, Env, epoll, errno, Error, ErrorKind, EscapeDebug, EscapeDefault, EscapeUnicode, event, Event, eventrwflags, eventtype, ExactChunks, ExactChunksMut, EXCEPTION, Excess, ExchangeHeapSingleton, exit, exitcode, ExitStatus, Failure, fd, fdflags, fdsflags, fdstat, ff, fflags, File, FILE, FileAttr, filedelta, FileDesc, FilePermissions, filesize, filestat, FILETIME, filetype, FileType, Filter, FilterMap, Fixdfdi, Fixdfsi, Fixdfti, Fixsfdi, Fixsfsi, Fixsfti, Fixunsdfdi, Fixunsdfsi, Fixunsdfti, Fixunssfdi, Fixunssfsi, Fixunssfti, Flag, FlatMap, Floatdidf, FLOATING, Floatsidf, Floatsisf, Floattidf, Floattisf, Floatundidf, Floatunsidf, Floatunsisf, Floatuntidf, Floatuntisf, flock, ForceResult, FormatSpec, Formatted, Formatter, Fp, FpCategory, fpos, fpos64, fpreg, fpregset, FPUControlWord, Frame, FromBytesWithNulError, FromUtf16Error, FromUtf8Error, FrontPlace, fsblkcnt, fsfilcnt, fsflags, fsid, fstore, fsword, FullBucket, FullBucketMut, FullDecoded, Fuse, GapThenFull, GeneratorState, gid, glob, glob64, GlobalDlmalloc, greg, group, GROUP, Guard, GUID, Handle, HANDLE, Handler, HashMap, HashSet, Heap, HINSTANCE, HMODULE, hostent, HRESULT, id, idtype, if, ifaddrs, IMAGEHLP, Immut, in, in6, Incoming, Infallible, Initializer, ino, ino64, inode, input, InsertResult, Inspect, Instant, int16, int32, int64, int8, integer, IntermediateBox, Internal, Intersection, intmax, IntoInnerError, IntoIter, IntoStringError, intptr, InvalidSequence, iovec, ip, IpAddr, ipc, Ipv4Addr, ipv6, Ipv6Addr, Ipv6MulticastScope, Iter, IterMut, itimerspec, itimerval, jail, JoinHandle, JoinPathsError, KDHELP64, kevent, kevent64, key, Key, Keys, KV, l4, LARGE, lastlog, launchpad, Layout, Lazy, lconv, Leaf, LeafOrInternal, Lines, LinesAny, LineWriter, linger, linkcount, LinkedList, load, locale, LocalKey, LocalKeyState, Location, lock, LockResult, loff, LONG, lookup, lookupflags, LookupHost, LPBOOL, LPBY, LPBYTE, LPCSTR, LPCVOID, LPCWSTR, LPDWORD, LPFILETIME, LPHANDLE, LPOVERLAPPED, LPPROCESS, LPPROGRESS, LPSECURITY, LPSTARTUPINFO, LPSTR, LPVOID, LPWCH, LPWIN32, LPWSADATA, LPWSAPROTOCOL, LPWSAPROTOCOLCHAIN, lseek, LUID, Machine, madvise, MajorFlags, MakeCaller, malloc, mcontext, mcontext64, memory, MemoryBlock, MemoryMap, Metadata, Metric, mflags, minor, MinorFlags, mnt, ModEntry, Mode, mode, Module, modflags, ModResults, Monitor, motd, Mount, mpack, mq, msg, msghdr, msginfo, msglen, msgqnum, msgseg, msgtql, msqid, Mutex, MutexGuard, MyBox, MyHeap, NativeLibBoilerplate, Netc, netent, nid, nl, nlitem, Node, NoneError, Nsec, OccupiedEntry, off, OffsetBucket, offmask, oflags, Once, OnceState, OpenOptions, Option, OptRes, os, OsStr, OsString, Output, OVERLAPPED, Owned, Pack, packet, PacketPart, page, Param, ParamIdx, ParseBoolError, ParseCharError, ParseError, ParseFloatError, ParseIntError, ParseResult, PartialBucket, Password, Path, path, PathBuf, PathComponent, PathComponents, PathIter, PathSegments, PCONDITION, PeekMut, Peekable, PeerCreds, Pending, Permissions, PhantomData, Phrase, pid, PID, PipeBuf, Place, Plan, PlanAlloc, Pluralize, poison, PoisonError, poll, port, Position, Post, ppoll, process, Process, ProcessOutput, protoent, ptrdiff, pthread, pthreadattr, pthreadbarrier, pthreadbarrierattr, pthreadcond, pthreadcondattr, pthreadkey, pthreadmutex, pthreadmutexattr, pthreadonce, pthreadrwlock, pthreadrwlockattr, pthreadt, ptrace, pw, pwent, Qd, queue, QueueInitializer, quote, radvisory, Range, RangeFrom, RangeFull, RangeInclusive, RangeMut, RangeTo, RangeToInclusive, RawBucket, RawPthread, RawTable, RawWaker, RawWakerVTable, Rc, RecvDgram, RecvMsg, record, RecvState, RecvTimeout, ReentrantMutex, reent, REF, ref, Ref, reference, referencecount, RefCell, RefMut, RegClass, RegGroup, register, REGISTRATION, RegKind, RemapRegs, RemoveResult, Repeat, ReplaceWith, Result, rlimit, rlimit64, rlim, rlim64, rlimt, roff, Root, RootedRc, RootedVec, RootedVecDeque, RootedWeak, RootRef, rseq, RseqSig, rusage, RustcDecodable, RustcEncodable, Same, scan, sched, Scope, ScopedCell, ScopedCellMut, Score, SearchResult, SearchStep, security, seek, Segment, segments, Select, SelectionResult, self, send, SendDgram, SendMsg, Sender, sendsize, SendTimeout, SeqCst, se, SearchStep, Option, HashMap},
        % Additional prelude value constructors
        morekeywords=[4]{acancel, accept, addressof, alloc, alloc_handle, bswap16, bswap32, bswap64, catch_unwind, ceil, ceilf32, ceilf64, core_panic, cos, cosf32, cosf64, discriminant_value, drop_in_place, fabsf32, fabsf64, floor, floorf32, floorf64, fmaf32, fmaf64, fmodf32, fmodf64, forget, likely, maxnumf32, maxnumf64, min_align_of, min_align_of_val, minnumf32, minnumf64, move_val_init, mul_with_overflow, nearmaxf32, nearmaxf64, nearminf32, nearminf64, needs_drop, likely, unlikely},
        % Other keywords
        morekeywords={async, await, dyn, abstract, priv, final, super, Yield, ref, self, where, try},
        % Optional addition
        otherkeywords={::, :, <>, .., ..=, ..<, ==, !=, <=>, ===, <==, >==, <=, >=, &&, ||, ??, :=, ==>, >>=, <<=, <:=, ?==, @, =>, =>>},
        }
        
        % Define a style for C code
        \lstdefinestyle{CStyle}{%
        	language=C,                          % Set the language to C
        	basicstyle=\ttfamily\small,          % Use a small monospaced font
        	keywordstyle=\color{RoyalBlue3},     % Color keywords in Royal Blue
        	keywordstyle=[2]\color{HotPink4}, % Color specific keywords in Medium Purple
        	keywordstyle=[3]\color{SpringGreen4},   % Color specific keywords in Chartreuse
        	keywordstyle=[4]\color{SlateBlue2},    % Color specific keywords in Slate Blue
        	commentstyle=\color{LightSteelBlue4},% Color comments in Light Steel Blue
        	stringstyle=\color{Firebrick2},      % Color strings in Firebrick
        	numberstyle=\tiny\ttfamily\color{SlateGray4}, % Set the style for line numbers
        	numbers=left,                        % Position line numbers on the left
        	stepnumber=1,                        % Number every line
        	numbersep=10pt,                      % Space between line numbers and code
        	backgroundcolor=\color{white},       % Set background color to white
        	breaklines=true,                     % Automatically break lines
        	captionpos=b,                        % Position captions at the bottom
        	showspaces=false,                    % Don't show spaces
        	showstringspaces=false,              % Don't show spaces within strings
        	showtabs=false,                      % Don't show tabs
        	tabsize=4,                           % Set tab size to 4 spaces
        	escapeinside={\%*}{*)}               % Define escape characters for LaTeX code within C code
        }
        
        % Define a style for C++ code
        \lstdefinestyle{CPlusPlusStyle}{%
        	language=C++,                        % Set the language to C++
        	basicstyle=\ttfamily\small,          % Use a small monospaced font
        	keywordstyle=\color{RoyalBlue3},     % Color keywords in Royal Blue
        	keywordstyle=[2]\color{HotPink4}, % Color specific keywords in Medium Purple
        	keywordstyle=[3]\color{SpringGreen4},   % Color specific keywords in Chartreuse
        	keywordstyle=[4]\color{SlateBlue2},    % Color specific keywords in Slate Blue
        	commentstyle=\color{LightSteelBlue4},% Color comments in Light Steel Blue
        	stringstyle=\color{Firebrick2},      % Color strings in Firebrick
        	numberstyle=\tiny\ttfamily\color{SlateGray4}, % Set the style for line numbers
        	numbers=left,                        % Position line numbers on the left
        	stepnumber=1,                        % Number every line
        	numbersep=10pt,                      % Space between line numbers and code
        	backgroundcolor=\color{white},       % Set background color to white
        	breaklines=true,                     % Automatically break lines
        	captionpos=b,                        % Position captions at the bottom
        	showspaces=false,                    % Don't show spaces
        	showstringspaces=false,              % Don't show spaces within strings
        	showtabs=false,                      % Don't show tabs
        	tabsize=4,                           % Set tab size to 4 spaces
        	escapeinside={\%*}{*)}               % Define escape characters for LaTeX code within C++ code
        }
        
        % Define a style for Java code
        \lstdefinestyle{JavaStyle}{%
        	language=Java,                       % Set the language to Java
        	basicstyle=\ttfamily\small,          % Use a small monospaced font
        	keywordstyle=\color{RoyalBlue3},     % Color keywords in Royal Blue
        	keywordstyle=[2]\color{HotPink4}, % Color specific keywords in Medium Purple
        	keywordstyle=[3]\color{SpringGreen4},   % Color specific keywords in Chartreuse
        	keywordstyle=[4]\color{SlateBlue2},    % Color specific keywords in Slate Blue
        	commentstyle=\color{LightSteelBlue4},% Color comments in Light Steel Blue
        	stringstyle=\color{Firebrick2},      % Color strings in Firebrick
        	numberstyle=\tiny\ttfamily\color{SlateGray4}, % Set the style for line numbers
        	numbers=left,                        % Position line numbers on the left
        	stepnumber=1,                        % Number every line
        	numbersep=10pt,                      % Space between line numbers and code
        	backgroundcolor=\color{white},       % Set background color to white
        	breaklines=true,                     % Automatically break lines
        	captionpos=b,                        % Position captions at the bottom
        	showspaces=false,                    % Don't show spaces
        	showstringspaces=false,              % Don't show spaces within strings
        	showtabs=false,                      % Don't show tabs
        	tabsize=4,                           % Set tab size to 4 spaces
        	escapeinside={\%*}{*)}               % Define escape characters for LaTeX code within Java code
        }
        
        % Define a style for Python code
        \lstdefinestyle{PythonStyle}{%
        	language=Python,                     % Set the language to Python
        	basicstyle=\ttfamily\small,          % Use a small monospaced font
        	keywordstyle=\color{RoyalBlue3},     % Color keywords in Royal Blue
        	keywordstyle=[2]\color{HotPink4}, % Color specific keywords in Medium Purple
        	keywordstyle=[3]\color{SpringGreen4},   % Color specific keywords in Chartreuse
        	keywordstyle=[4]\color{SlateBlue2},    % Color specific keywords in Slate Blue
        	commentstyle=\color{LightSteelBlue4},% Color comments in Light Steel Blue
        	stringstyle=\color{Firebrick2},      % Color strings in Firebrick
        	numberstyle=\tiny\ttfamily\color{SlateGray4}, % Set the style for line numbers
        	numbers=left,                        % Position line numbers on the left
        	stepnumber=1,                        % Number every line
        	numbersep=10pt,                      % Space between line numbers and code
        	backgroundcolor=\color{white},       % Set background color to white
        	breaklines=true,                     % Automatically break lines
        	captionpos=b,                        % Position captions at the bottom
        	showspaces=false,                    % Don't show spaces
        	showstringspaces=false,              % Don't show spaces within strings
        	showtabs=false,                      % Don't show tabs
        	tabsize=4,                           % Set tab size to 4 spaces
        	escapeinside={\%*}{*)}               % Define escape characters for LaTeX code within Python code
        }
        
        % Define a style for Rust code
        \lstdefinestyle{RustStyle}{%
        	language=Rust,                     % Set the language to Rust
        	basicstyle=\ttfamily\small,        % Use a small monospaced font
        	keywordstyle=\color{RoyalBlue3},   % Color keywords in Royal Blue
        	keywordstyle=[2]\color{HotPink4}, % Color specific keywords in Medium Purple
        	keywordstyle=[3]\color{SpringGreen4},   % Color specific keywords in Chartreuse
        	keywordstyle=[4]\color{SlateBlue2},    % Color specific keywords in Slate Blue
        	commentstyle=\color{LightSteelBlue4},  % Color comments in Light Steel Blue
        	stringstyle=\color{Firebrick2},    % Color strings in Firebrick
        	numberstyle=\tiny\ttfamily\color{SlateGray4}, % Style for line numbers
        	numbers=left,                      % Position line numbers on the left
        	stepnumber=1,                      % Number every line
        	numbersep=10pt,                    % Space between line numbers and code
        	backgroundcolor=\color{white},     % Set background color to white
        	breaklines=true,                   % Automatically break lines
        	captionpos=b,                      % Position captions at the bottom
        	showspaces=false,                  % Don't show spaces
        	showstringspaces=false,            % Don't show spaces within strings
        	showtabs=false,                    % Don't show tabs
        	tabsize=4,                         % Set tab size to 4 spaces
        	escapeinside={\%*}{*)}             % Define escape characters for LaTeX code within Rust code
        }
        
        % Reset the code box counter at the start of each chapter
        \preto\chapter{\setcounter{codeboxcounter}{0}}
        
        % Define a new counter for code boxes, reset at each chapter
        \newcounter{codeboxcounter}[chapter]
        
        % Define the "codebox" environment using mdframed
        \newenvironment{codebox}[1][Code Box]
        {
        	\stepcounter{codeboxcounter} % Increment the code box counter
        	\newmdenv[%
        		frametitlebackgroundcolor=none, % No background color for the frame title
        		frametitlefont=\scshape\sffamily, % Use small caps and sans serif for the frame title
        		frametitleaboveskip=5pt, % Space above the frame title
        		frametitlerule=true, % Add a horizontal rule under the frame title
        		frametitlerulecolor=black, % Set the rule color to black
        		frametitlerulewidth=1pt, % Set the rule thickness
        		frametitlealignment=\raggedright, % Align the frame title to the left
        		frametitle={\thechapter.\arabic{codeboxcounter}:~##1}, % Format for the frame title with chapter and code box numbers
        		linewidth=1pt, % Set the frame line width
        		linecolor=black, % Set the frame line color
        		innertopmargin=10pt, % Set inner margin at the top of the frame
        		innerbottommargin=10pt, % Set inner margin at the bottom of the frame
        		leftline=false, % Remove the left vertical line of the frame
        		rightline=false, % Remove the right vertical line of the frame
        	]{codeboxinner}\begin{codeboxinner}
        		}{%
        	\end{codeboxinner}
        }
        
        % Define a custom command for adding code snippets in a code box
        % Arguments:
        %   #1: Title of the code box
        %   #2: Label for the code box
        %   #3: Listing style for code formatting
        %   #4: File path to the code file
        \providecommand{\addcode}[4]{%
        	\begin{codebox}[##1]\label{code:##2} % Start the code box environment with a title and label
        		\lstinputlisting[style=##3]{##4} % Include the code from the specified file with the chosen style
        	\end{codebox} % End the code box environment
        }
}

\ifbool{usecodelists}{\usecodelists}{\typeout{Code and program listings are not used.}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Environment for Problems and Exercises
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Define a new environment called 'problems' with an optional title argument (default: 'Problem Set')
\newenvironment{problems}[1][Problem Set]{
	% Set the section heading to the provided title
	\vfill\pagebreak\section{#1} % Make the title bold
	\small % Set font size to small for the content
	% Configure enumeration style:
	% For the first level, set labels as (Problem ChapterNumber.ItemNumber)
	\setlist[enumerate, 1]{label={${\color{accentcolor}\scriptstyle\vartriangleright\hspace{1pt}\displaystyle\thechapter.\arabic*}$}, left=0pt, labelsep=1em, itemsep=0.5em}
	% For the second level, set labels as (a), (b), etc.
	\setlist[enumerate, 2]{label=(\arabic*), left=1em, labelsep=1em, itemsep=0.5em}
	% Begin an enumerated list for the problems
	\begin{enumerate}
		}{
		% End the enumerated list
	\end{enumerate}
	% Adjust the layout or formatting as needed at the end
}

% Define a new enumeration list style called 'caseList' with a single level
\newlist{caseList}{enumerate}{1}
% Configure 'caseList' labels: bold text 'Case n:' where n is the item number, with no left margin
\setlist[caseList]{label=\textsc{Case~\arabic*:},leftmargin=*}

% Define a new environment called 'case' with an optional argument (default: empty)
\NewDocumentEnvironment{case}{O{}}{%
	% Start the 'caseList' enumeration with the optional title
	\begin{caseList}[#1]%
		}{%
		% End the 'caseList' enumeration
	\end{caseList}%
}

% Define a new enumeration list style called 'axiomList' with a single level
\newlist{axiomList}{enumerate}{1}
% Configure 'axiomList' labels: bold text 'Axiom A:' where A is the letter index, with no left margin
\setlist[axiomList]{label=\textbf{Axiom~\arabic*.}, leftmargin=*}

% Define a new environment called 'axiom' with an optional argument (default: empty)
\NewDocumentEnvironment{axiom}{O{}}{%
	% Start the 'axiomList' enumeration with the optional title
	\begin{axiomList}[#1]%
		}{%
		% End the 'axiomList' enumeration
	\end{axiomList}%
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Custom Commands for Document Formatting
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\providecommand*{\code}[1]{{\ttfamily#1}} % Formats text in a monospaced font to represent code
\providecommand{\cat}[1]{\ensuremath{\mathsf{#1}}} % Displays category names in math mode using a sans-serif font
\providecommand{\missingcitation}{\code{\small\color{Firebrick1}<Citation Missing>}} % Formats missing citations in small red text
\providecommand{\missing}[1]{{\color{Firebrick1}#1}} % Highlights text in red to indicate missing or problematic content
\providecommand{\strike}{\bgroup\ULdepth=-.55ex\ULset} % Applies a strike-through effect for deleted or emphasized text
\providecommand{\term}[1]{#1\index{#1}} % Defines and indexes terms for glossary inclusion
\providecommand{\textem}[1]{{\bfseries\color{accentcolor}#1}} % Formats emphasized text with bold font in a specified accent color
\providecommand{\toc}{%
	\tableofcontents % Generates the table of contents
	\addcontentsline{toc}{chapter}{Contents} % Adds a "Contents" entry to the table of contents
	\vfill % Fills vertical space to push content to the next page
	\pagebreak % Forces a page break after the table of contents
}
\providecommand{\urlref}[1]{\href{#1}{#1}} % Creates a hyperlink for a given URL

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% TODO Notes and Annotations
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Enable TODO notes functionality within the document
\RequirePackage{todonotes} % Enable adding TODO notes

% Insert inline TODO notes with a red border and background for annotation purposes
\providecommand{\mynote}[1]{%
	\smallskip
	\todo[inline, size=\small, bordercolor=Firebrick1!20, color=Firebrick1!20]{\sffamily#1}
	\smallskip
} % Create inline TODO notes with red border and background

% Mark sections requiring a citation with a TODO note
\providecommand{\needcite}{%
	\todo[noline, size=\small, bordercolor=Firebrick1!20, color=Firebrick1!20]{\sffamily~Requires citation.}
} % Mark locations where a citation is required

% Disable the use of '@' in command names
\makeatother

% End of package
\endinput